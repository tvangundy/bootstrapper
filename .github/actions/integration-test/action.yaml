name: 'Integration Test'
description: 'Runs integration tests against Windsor CLI'

inputs:
  windsor_up:
    description: 'Whether to run Windsor Up before tests (true/false)'
    required: false
    type: boolean
    default: false
  version:
    description: 'Version in semantic format (e.g., v1.0.0)'
    required: false
    default: ''
  release_branch:
    description: 'Release branch name (e.g., release-1.0.0, release-latest)'
    required: false
    default: ''
  release_number:
    description: 'Release number (e.g., 1.0.0)'
    required: false
    default: ''
  windsor_test_config:
    description: 'Path to Windsor test configuration file'
    required: false
    default: 'tests/configs/ci-integration-tests.yaml'
  docker_host:
    description: 'Docker host address for remote Docker operations'
    required: false
    default: ''
  platform_os:
    description: 'Platform OS (e.g., linux, windows)'
    required: false
    default: 'linux'
  token:
    description: 'GitHub token for API authentication and permissions'
    required: false
    default: ''

outputs:
  test_status:
    description: 'Status of the integration tests (success/failure)'
    value: ${{ steps.test_results.outputs.status }}

permissions:
  contents: read

runs:
  using: 'composite'

  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Print Test Parameters
      run: |
        echo "----------------------------------------"
        echo "Integration Test Parameters"
        echo "----------------------------------------"
        echo "Windsor Up: ${{ inputs.windsor_up }}"
        echo "Version: ${{ inputs.version }}"
        echo "Release Branch: ${{ inputs.release_branch }}"
        echo "Release Number: ${{ inputs.release_number }}"
        echo "Windsor Test Config: ${{ inputs.windsor_test_config }}"
        echo "Docker Host: ${{ inputs.docker_host }}"
        echo "Platform: ${{ inputs.platform_os }}"
        echo "----------------------------------------"
      shell: bash

    # Main test execution would go here
    
    - name: Set Test Results
      id: test_results
      uses: actions/github-script@v7
      with:
        script: |
          try {
            // This is a placeholder - in a real implementation, this would evaluate test outcomes
            // based on the results of previous test steps
            
            // Log some useful debugging information
            console.log('Test configuration:', {
              windsorUp: '${{ inputs.windsor_up }}',
              version: '${{ inputs.version }}',
              releaseBranch: '${{ inputs.release_branch }}',
              releaseNumber: '${{ inputs.release_number }}',
              windsorTestConfig: '${{ inputs.windsor_test_config }}',
              dockerHost: '${{ inputs.docker_host }}',
              platformOs: '${{ inputs.platform_os }}'
            });
            
            // In a real implementation, we would determine success/failure based on test results
            // For now, we'll just set success
            core.setOutput('status', 'success');
            console.log('Tests completed. Set status to success.');
          } catch (error) {
            console.error('Error during test execution:', error.message);
            core.setOutput('status', 'failure');
            
            // Don't fail the workflow, just report the status as failure
            // This allows the workflow to continue and report results
            console.log('Setting test status to failure but allowing workflow to continue');
          }
          
    - name: Validate and Report Test Completion
      run: |
        echo "----------------------------------------"
        echo "Integration Test Results"
        echo "----------------------------------------"
        echo "Status: ${{ steps.test_results.outputs.status }}"
        echo "Platform: ${{ inputs.platform_os }}"
        echo "Windsor Up Used: ${{ inputs.windsor_up }}"
        echo "----------------------------------------"
      shell: bash
    