name: 'Run Integration Tests'

on:
  workflow_dispatch:
    inputs:
      windsor_up:
        description: 'Windsor Up'
        required: false
        type: boolean
        default: false
      windsor_test_config:
        description: 'Windsor test configuration file'
        required: false
        default: 'ci-tests.yaml'
      release_branch:
        description: 'Release Branch (release-1.0.0 or 1.0.0)'
        required: false
        default: 'release-latest'
      release_number:
        description: 'Release Number (1.0.0)'
        required: false
        default: ''
      version:
        description: 'Version (e.g., v1.0.0, 1.0.0)'
        required: false
      target_repo_owner:
        description: 'Test Target Repository Owner'
        required: true
        default: 'windsorcli'
      target_repo_name:
        description: 'Test Target Repository Name'
        required: true
        default: 'cli'
      token:
        description: 'GitHub token for API authentication'
        required: false
        default: ''
permissions:
  contents: read

jobs:
  integration-test-prep:
    runs-on: ubuntu-latest
    outputs:
      UNIX_RUNNER_LIST: ${{ steps.unix_runner_prep.outputs.RUNNER_LIST }}
      WINDOWS_RUNNER_LIST: ${{ steps.windows_runner_prep.outputs.RUNNER_LIST }}
      WINDSOR_TEST_CONFIG_PATH: ${{ steps.config_path.outputs.WINDSOR_TEST_CONFIG_PATH }}
      VERSION: ${{ steps.set_release_info.outputs.VERSION }}
      RELEASE_BRANCH: ${{ steps.set_release_info.outputs.RELEASE_BRANCH }}
      RELEASE_NUMBER: ${{ steps.set_release_info.outputs.RELEASE_NUMBER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Validate Release Input
        id: validate_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ inputs.token != '' && inputs.token || secrets.WINDSORCLI_RELEASE_TOKEN }}
          script: |
            try {
              const releaseInput = '${{ inputs.release_branch }}';
              const validFormat = /^(release-latest|release-[0-9]+\.[0-9]+\.[0-9]+|v?[0-9]+\.[0-9]+\.[0-9]+|[0-9]+\.[0-9]+\.[0-9]+)$/;
  
              if (!validFormat.test(releaseInput)) {
                console.log("Release input:", releaseInput);
                throw new Error("Invalid release input. Please provide 'release-latest' or a version in the format 'release-x.y.z', 'v0.1.0', or '0.1.0'.");
              }
              console.log("Validated release input value:", releaseInput);
              core.setOutput('validated', 'true');
            } catch (error) {
              core.setFailed(`Release validation failed: ${error.message}`);
              throw error;
            }
  
      - name: Print Out the inputs
        run: |
          echo "Integration Test Input Variables"
          echo "----------------------------------------"
          echo "Repo Owner: ${{ inputs.target_repo_owner }}"
          echo "Repo Name: ${{ inputs.target_repo_name }}"
          echo "Release Branch: ${{ inputs.release_branch }}"
          echo "Release Number: ${{ inputs.release_number }}"
          echo "Version: ${{ inputs.version }}"
          echo "Windsor Up: ${{ inputs.windsor_up }}"
          echo "Windsor Test Config: ${{ inputs.windsor_test_config }}"
          echo "----------------------------------------"

      - name: Determine Release Branch
        uses: ./.github/actions/determine-release-branch
        with:
          version: ${{ inputs.version }}
          release: ${{ inputs.release_branch }}
          repo_owner: ${{ inputs.target_repo_owner }}
          repo_name: ${{ inputs.target_repo_name }}
          token: ${{ secrets.WINDSORCLI_RELEASE_TOKEN }}
    
      - name: Display Release Info
        run: |
          echo "----------------------------------------"
          echo "Release Information"
          echo "----------------------------------------"
          echo "Release Branch: ${{ env.RELEASE_BRANCH }}"
          echo "Release Number: ${{ env.RELEASE_NUMBER }}"
          echo "Version: ${{ env.VERSION }}"
          echo "----------------------------------------"
        shell: bash

      - name: Set Release Information
        id: set_release_info
        run: |
          echo "VERSION=${{ env.VERSION }}" >> $GITHUB_OUTPUT
          echo "RELEASE_BRANCH=${{ env.RELEASE_BRANCH }}" >> $GITHUB_OUTPUT
          echo "RELEASE_NUMBER=${{ env.RELEASE_NUMBER }}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set Windsor Test Config Path
        id: config_path
        run: |
          WINDSOR_TEST_CONFIG_PATH="tests/configs/${{ inputs.windsor_test_config }}"
          echo "WINDSOR_TEST_CONFIG_PATH=$WINDSOR_TEST_CONFIG_PATH" >> $GITHUB_OUTPUT
          echo "Windsor Test Config Path: $WINDSOR_TEST_CONFIG_PATH"
        shell: bash

      - name: Build Unix Runner List
        id: unix_runner_prep
        uses: ./.github/actions/build-unix-runner-list
        with:
          config_file_path: '${{ steps.config_path.outputs.WINDSOR_TEST_CONFIG_PATH }}'

      - name: Build Windows Runner List
        id: windows_runner_prep
        uses: ./.github/actions/build-windows-runner-list
        with:
          config_file_path: '${{ steps.config_path.outputs.WINDSOR_TEST_CONFIG_PATH }}'

      - name: Print Integration Test Prep Results
        run: |
          echo "Integration Test Prep Results"
          echo "----------------------------------------"
          echo "UNIX_RUNNER_LIST: ${{ steps.unix_runner_prep.outputs.RUNNER_LIST }}"
          echo "WINDOWS_RUNNER_LIST: ${{ steps.windows_runner_prep.outputs.RUNNER_LIST }}"
          echo "WINDSOR_TEST_CONFIG_PATH: ${{ steps.config_path.outputs.WINDSOR_TEST_CONFIG_PATH }}"
          echo "VERSION: ${{ steps.set_release_info.outputs.VERSION }}"
          echo "RELEASE_BRANCH: ${{ steps.set_release_info.outputs.RELEASE_BRANCH }}"
          echo "RELEASE_NUMBER: ${{ steps.set_release_info.outputs.RELEASE_NUMBER }}"
          echo "----------------------------------------"
        shell: bash

  unix-integration-tests:
    name: Unix Tests (Linux/macOS)
    needs: 
      - integration-test-prep
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJson(needs.integration-test-prep.outputs.UNIX_RUNNER_LIST) }}
            
    runs-on: ${{ matrix.runner.os }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print Job Input Values
        run: |
          echo "----------------------------------------"
          echo "Integration Test Inputs from Previous Job"
          echo "----------------------------------------"
          echo "Platform: ${{ matrix.runner.os }}"
          echo "Windsor Test Config: ${{ needs.integration-test-prep.outputs.WINDSOR_TEST_CONFIG_PATH }}"
          echo "Version: ${{ needs.integration-test-prep.outputs.VERSION }}"
          echo "Release Branch: ${{ needs.integration-test-prep.outputs.RELEASE_BRANCH }}"
          echo "Release Number: ${{ needs.integration-test-prep.outputs.RELEASE_NUMBER }}"
          echo "Runner Label: ${{ matrix.runner.label }}"
          echo "Docker Host: ${{ matrix.runner.docker_host }}"
          echo "----------------------------------------"
        shell: bash
        
      - name: Run Unix Integration Test
        uses: ./.github/actions/unix-integration-test
        with:
          windsor_up: ${{ inputs.windsor_up }}
          version: ${{ needs.integration-test-prep.outputs.VERSION }}
          release_branch: ${{ needs.integration-test-prep.outputs.RELEASE_BRANCH }}
          release_number: ${{ needs.integration-test-prep.outputs.RELEASE_NUMBER }}
          windsor_test_config: ${{ needs.integration-test-prep.outputs.WINDSOR_TEST_CONFIG_PATH }}
          docker_host: ${{ matrix.runner.docker_host }}

  windows-integration-tests:
    name: Windows Tests
    needs: 
      - integration-test-prep
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJson(needs.integration-test-prep.outputs.WINDOWS_RUNNER_LIST) }}
    runs-on: ${{ matrix.runner.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Windows Integration Tests
        uses: ./.github/actions/windows-integration-test
        with:
          windsor_up: ${{ inputs.windsor_up }}
          version: ${{ needs.integration-test-prep.outputs.VERSION }}
          release_branch: ${{ needs.integration-test-prep.outputs.RELEASE_BRANCH }}
          release_number: ${{ needs.integration-test-prep.outputs.RELEASE_NUMBER }}
          windsor_test_config: ${{ needs.integration-test-prep.outputs.WINDSOR_TEST_CONFIG_PATH }}
          docker_host: ${{ matrix.runner.docker_host }}
